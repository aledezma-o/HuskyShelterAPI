  
AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31
Description: Husky Shelters 
Resources:
  StartUpRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:  StartUpRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole
      Policies:
        - PolicyName: "s3Dynamo"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - s3:DeleteObject
              - s3:ListBucket
              - s3:PutObject
              - s3:GetObject
              Resource: '*'
            - Effect: Allow
              Action: dynamodb:PutItem
              Resource: '*'
              
  DataMigrationLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: dataMigration
      Handler: dataMigration.Migrate
      Runtime: python3.6
      CodeUri: package/
      Role: !GetAtt StartUpRole.Arn
      Environment:
        Variables:
          HUSKY_SHELTERS_TABLE: !Ref HuskySheltersTable
      Events:
        generalShelterTrigger:
          Type: S3
          Properties:
            Bucket: !Ref HuskySheltersBucket
            Events: s3:ObjectCreated:*
            
  HuskySheltersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: husky-shelters-table
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: Name
          AttributeType: S
        - AttributeName: HealthStatus
          AttributeType: S
        - AttributeName: Age
          AttributeType: S
        - AttributeName: Location
          AttributeType: S
      LocalSecondaryIndexes: 
        - IndexName: NameLSI
          KeySchema: 
            - AttributeName: PK
              KeyType: HASH
            - AttributeName: Name
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: HealthStatusLSI
          KeySchema: 
            - AttributeName: PK
              KeyType: HASH
            - AttributeName: HealthStatus
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: AgeLSI
          KeySchema: 
            - AttributeName: PK
              KeyType: HASH
            - AttributeName: Age
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: LocationLSI
          KeySchema: 
            - AttributeName: PK
              KeyType: HASH
            - AttributeName: Location
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
    
  HuskySheltersBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: huskysheltersawsbucket
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: False
        BlockPublicPolicy: False
        IgnorePublicAcls: False
        RestrictPublicBuckets: False
  
  #Mathias
  WebBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: husky-shelters-web-app-awsome
      MetricsConfigurations:
        - Id: EntireBucket
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
        RoutingRules:
          - RoutingRuleCondition:
              HttpErrorCodeReturnedEquals: '404'
              KeyPrefixEquals: out1/
            RedirectRule:
              HostName: ec2-11-22-333-44.compute-1.amazonaws.com
              ReplaceKeyPrefixWith: report-404/
    DeletionPolicy: Retain
  
  SampleBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref WebBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref WebBucket
                - /*
            Principal: '*'
            
  SampleBucketPolicy2:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref HuskySheltersBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Effect: Allow
            Sid: "PublicReadGetObject"
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref HuskySheltersBucket
                - /*
            Principal: '*'
    
  GetPets:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getPets
      Handler: webPets.getPets
      Runtime: python3.8
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref HuskySheltersTable
      Environment:
        Variables:
          HUSKY_SHELTERS_TABLE: !Ref HuskySheltersTable
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref HuskySheltersAPI
            Path: "/petsTable"
            Method: GET
            
  HuskySheltersAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: husky-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml
        
###########################################
  UpdatePets:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: updatePet
      Handler: pet.updatePet
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref HuskySheltersTable
        - S3WritePolicy:
            BucketName: !Ref HuskySheltersBucket
      Environment:
        Variables:
          HUSKY_SHELTERS_TABLE: !Ref HuskySheltersTable
          HUSKY_SHELTERS_BUCKET: !Ref HuskySheltersBucket
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref HuskySheltersAPI
            Path: "/pets/{petID}"
            Method: PUT
  DeleteImage:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: deleteImage
      Handler: pet.deleteImage
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref HuskySheltersTable
        - S3CrudPolicy:
            BucketName: !Ref HuskySheltersBucket
      Environment:
        Variables:
          HUSKY_SHELTERS_TABLE: !Ref HuskySheltersTable
          HUSKY_SHELTERS_BUCKET: !Ref HuskySheltersBucket
      Events:
        GetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref HuskySheltersAPI
            Path: "/pets/deleteImage/{petID}"
            Method: PUT
            
  HuskySheltersTopic:
    Type: AWS::SNS::Topic 
      TopicName: HuskyShelters-Topic
      
  ApproveAdoptionSolicit:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: approveAdoption
      Handler: approve.handler
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref HuskySheltersTable
        - DynamoDBReadPolicy:
            TableName: !Ref HuskySheltersTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt HuskySheltersTopic.TopicName
        - SNSCrudPolicy:
            TopicName: !GetAtt HuskySheltersTopic.TopicName
      Environment:
        Variables:
          HUSKY_SHELTERS_TABLE: !Ref HuskySheltersTable
          TOPIC_ARN: !Ref HuskySheltersTopic
      Events:
        ApproveAdoptionSolicit:
          Type: Api
          Properties:
            RestApiId: !Ref HuskySheltersAPI
            Path: "/pets/approveAdoption/{}"
            Method: PUT
      
  SolicitAdoption:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: solicitAdoption
      Handler: adopt.solicitAdoption
      Runtime: python3.6
      CodeUri: package/
  #    Policies:
  #     - DynamoDBReadPolicy:
  #        TableName: !Ref MyTable
  #    # Role: !GetAtt MyLambdaRole.Arn
  #    Environment:
  #      Variables:
  #        ADOPTION_TABLE: !Ref MyTable
  #    Events:
  #      GetUsers:
  #        Type: Api
  #        Properties:
  #          RestApiId: !Ref MyAPI
  #          Path: "/pets/{petId}"
  #          Method: PUT